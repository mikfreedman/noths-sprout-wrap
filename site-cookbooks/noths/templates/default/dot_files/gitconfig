[user]
  name = 
  email = 
  initials = 
[credential]
  helper = osxkeychain
[push]
  default = current
[color]
  ui = auto
  branch = auto
  diff = auto
  interactive = auto
  status = auto
[alias]
  st = status
  ci = commit
  br = branch
  co = checkout
  df = diff
  dc = diff --cached
  lg = log -p
  lol = log --graph --decorate --pretty=oneline --abbrev-commit
  lola = log --graph --decorate --pretty=oneline --abbrev-commit --all
  ls = ls-files
  di = diff
  sta = stash
  llog = log --date=local
  flog = log --pretty=fuller --decorate
  blog = log origin/master... --left-right
  ds = diff --staged
  fixup = commit --fixup
  squash = commit --squash
  unstage = reset HEAD
  rum = rebase master@{u}
  unpushed = !"PROJ_BRANCH=$(git symbolic-ref HEAD | sed 's|refs/heads/||') && git log origin/$PROJ_BRANCH..HEAD"
  unpulled = !"PROJ_BRANCH=$(git symbolic-ref HEAD | sed 's|refs/heads/||') && git fetch && git log HEAD..origin/$PROJ_BRANCH"
[format]
  pretty = format:"%h %C(yellow)%ci%Creset %Cgreen%an%Creset | %s"
[core]
  pager = less -FXRS -x2
[merge "railsschema"]
         name = newer Rails schema version
                 driver = "ruby -e '\n\
                   system %(git), %(merge-file), %(--marker-size=%L), %(%A), %(%O), %(%B)\n\
                   b = File.read(%(%A))\n\
                   b.sub!(/^<+ .*\\nActiveRecord::Schema\\.define.:version => (\\d+). do\\n=+\\nActiveRecord::Schema\\.define.:version => (\\d+). do\\n>+ .*/) do\n\
                     %(ActiveRecord::Schema.define(:version => #{[$1, $2].max}) do)\n\
                   end\n\
                   File.open(%(%A), %(w)) {|f| f.write(b)}\n\
                   exit 1 if b.include?(%(<)*%L)'"
[merge]
  conflictstyle = diff3
[apply]
  whitespace = nowarn
[branch]
  autosetupmerge = true
[rebase]
  autosquash = true
